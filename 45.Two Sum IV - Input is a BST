/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> list = new ArrayList<Integer>();
    public void get( TreeNode root, int k){
        if(root!=null){
            list.add(root.val);
            get( root.left, k);
            get(root.right, k);
        }
    }
    public boolean findTarget(TreeNode root, int k) {
        get(root, k);
        int[] a = new int[list.size()];
        for(int i=0; i<list.size();i++) a[i]=list.get(i);
        Arrays.sort(a);
        int i=0, j=a.length-1;
        while(i<j){
            if(a[i]+a[j]==k) return true;
            if(a[i]+a[j]>k) j--;
            else i++;
        }
        return false;
        
    }
}
