/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> list = new ArrayList<Integer>();
    public void addList(TreeNode root){
        if(root!=null) list.add(root.val);
        if(root.left!=null) addList(root.left);
        if(root.right!= null) addList(root.right);
    }
    public int getMinimumDifference(TreeNode root) {
        addList(root);
        Collections.sort(list);
        int min = Integer.MAX_VALUE;
        for(int i=0; i<list.size()-1;i++){
            int k=Math.abs(list.get(i)-list.get(i+1));
            if(k<min) min=k;
        }
        return min;
    }
}
